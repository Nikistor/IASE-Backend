# Generated by Django 5.1.7 on 2025-05-11 11:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('ticker', models.CharField(blank=True, null=True, verbose_name='Тикер')),
                ('industry', models.CharField(blank=True, null=True, verbose_name='Отрасль')),
                ('capital', models.IntegerField(blank=True, null=True, verbose_name='Капитализация (млрд руб)')),
                ('enterprise_value', models.IntegerField(blank=True, null=True, verbose_name='Стоимость компании (млрд руб)')),
                ('revenue', models.IntegerField(blank=True, null=True, verbose_name='Выручка (млрд руб)')),
                ('net_profit', models.FloatField(blank=True, null=True, verbose_name='Чистая прибыль (млрд руб)')),
                ('pe', models.FloatField(blank=True, null=True, verbose_name='P/E')),
                ('ps', models.FloatField(blank=True, null=True, verbose_name='P/S')),
                ('pb', models.FloatField(blank=True, null=True, verbose_name='P/B')),
                ('ev_ebitda', models.FloatField(blank=True, null=True, verbose_name='EV/EBITDA')),
                ('ebitda_margin', models.FloatField(blank=True, null=True, verbose_name='Рентабельность, EBITDA')),
                ('debt_ebitda', models.FloatField(blank=True, null=True, verbose_name='долг/EBITDA')),
                ('report', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчетность')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='Год отчетности')),
                ('status', models.IntegerField(choices=[(1, 'Действует'), (2, 'Удалена')], default=1, verbose_name='Статус')),
                ('image', models.ImageField(blank=True, default='companies/default.jpg', null=True, upload_to='companies', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('is_moderator', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bankrupt', models.IntegerField(choices=[(-1, 'Не определён'), (0, 'Да'), (1, 'Нет')], default=-1, verbose_name='Банкрот')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('status', models.IntegerField(choices=[(1, 'Введён'), (2, 'В работе'), (3, 'Завершён'), (4, 'Отменён'), (5, 'Удалён')], default=1, verbose_name='Статус')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('date_formation', models.DateTimeField(blank=True, null=True, verbose_name='Дата формирования')),
                ('date_complete', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('report', models.FileField(blank=True, null=True, upload_to='reports/', verbose_name='Отчет')),
                ('companies', models.ManyToManyField(null=True, to='requisitions.company', verbose_name='Города')),
                ('employer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='employer', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('moderator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='moderator', to=settings.AUTH_USER_MODEL, verbose_name='Админ')),
            ],
            options={
                'verbose_name': 'Вакансия',
                'verbose_name_plural': 'Вакансии',
                'ordering': ('-date_formation',),
            },
        ),
    ]
